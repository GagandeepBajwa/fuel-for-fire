!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
K	../dev/kmeans_clustering.py	/^K = 10$/;"	kind:variable	line:22
K	../dev/kmeans_clustering_cli.py	/^    K = 10$/;"	kind:variable	line:101
KMeans	../dev/kmeans_clustering.py	/^from sklearn.cluster import KMeans$/;"	kind:namespace	line:4
KMeans	../dev/kmeans_clustering_cli.py	/^from sklearn.cluster import KMeans$/;"	kind:namespace	line:10
LinearSegmentedColormap	../dev/kmeans_clustering.py	/^from matplotlib.colors import LinearSegmentedColormap$/;"	kind:namespace	line:2
LinearSegmentedColormap	../dev/kmeans_clustering_cli.py	/^from matplotlib.colors import LinearSegmentedColormap$/;"	kind:namespace	line:8
MAX_K	../dev/kmeans_clustering.py	/^MAX_K = 20$/;"	kind:variable	line:23
MAX_K	../dev/kmeans_clustering_cli.py	/^    MAX_K = 20$/;"	kind:variable	line:105
X	../dev/kmeans_clustering_cli.py	/^    X = img[:, :, :13].reshape(new_shape)$/;"	kind:variable	line:119
X_cluster	../dev/kmeans_clustering_cli.py	/^    X_cluster = X_cluster.reshape(img[:, :, 0].shape)$/;"	kind:variable	line:125
X_cluster	../dev/kmeans_clustering_cli.py	/^    X_cluster = k_means.labels_$/;"	kind:variable	line:124
band_select	../dev/read_multispectral_cli.py	/^band_select = [3, 2, 1]$/;"	kind:variable	line:72
binaryImage	../dev/read_multispectral.py	/^binaryImage = image + ".bin"$/;"	kind:variable	line:16
blending.py	../dev/blending.py	1;"	kind:file	line:1
c	../dev/blending.py	/^c = cv2.waitKey(0)$/;"	kind:variable	line:19
cm	../dev/blending.py	/^cm = cv2.imread(colorMapPath + mapImage, cv2.IMREAD_COLOR)$/;"	kind:variable	line:9
cm	../dev/kmeans_clustering_cli.py	/^    cm = LinearSegmentedColormap.from_list($/;"	kind:variable	line:131
colorImage	../dev/blending.py	/^colorImage = "2019-9-23-182326.png"$/;"	kind:variable	line:6
colorMapImagePath	../dev/kmeans_clustering.py	/^colorMapImagePath = "..\/images\/colormap\/"$/;"	kind:variable	line:15
colorMapPath	../dev/blending.py	/^colorMapPath = "..\/images\/colormap\/"$/;"	kind:variable	line:3
colors	../dev/kmeans_clustering_cli.py	/^    colors = [(1, 0, 0), (0, 1, 0), (0, 0, 1), (1, 0, 1), (1, 1, 0),$/;"	kind:variable	line:128
convertBinary	../dev/read_multispectral.py	/^def convertBinary():$/;"	kind:function	line:33
convertImagePath	../dev/read_multispectral.py	/^convertImagePath = "..\/images\/converted\/"$/;"	kind:variable	line:14
convertPath	../dev/blending.py	/^convertPath = "..\/images\/converted\/"$/;"	kind:variable	line:4
createColorMap	../dev/kmeans_clustering.py	/^def createColorMap(X_cluster, K):$/;"	kind:function	line:73
createRGB	../dev/read_multispectral.py	/^def createRGB(data, bands, lines, samples):$/;"	kind:function	line:45
cv2	../dev/blending.py	/^import cv2$/;"	kind:namespace	line:1
cv2	../dev/kmeans_clustering.py	/^import cv2$/;"	kind:namespace	line:3
cv2	../dev/read_multispectral.py	/^import cv2$/;"	kind:namespace	line:10
data	../dev/read_multispectral_cli.py	/^data = np.fromfile(sys.argv[1], '<f4').reshape((bands, lines * samples))$/;"	kind:variable	line:68
elbow_method	../dev/kmeans_clustering.py	/^def elbow_method(image_2d, max_k):$/;"	kind:function	line:87
elbow_method	../dev/kmeans_clustering_cli.py	/^def elbow_method(image_2d, max_k):$/;"	kind:function	line:71
err	../dev/read_multispectral_cli.py	/^def err(c):$/;"	kind:function	line:40
gdal	../dev/kmeans_clustering.py	/^from osgeo import gdal, gdal_array$/;"	kind:namespace	line:6
gdal	../dev/kmeans_clustering_cli.py	/^from osgeo import gdal, gdal_array$/;"	kind:namespace	line:12
gdal_array	../dev/kmeans_clustering.py	/^from osgeo import gdal, gdal_array$/;"	kind:namespace	line:6
gdal_array	../dev/kmeans_clustering_cli.py	/^from osgeo import gdal, gdal_array$/;"	kind:namespace	line:12
getCharacteristicValues	../dev/read_multispectral.py	/^def getCharacteristicValues(headerFile):$/;"	kind:function	line:22
getInputMatrix	../dev/kmeans_clustering.py	/^def getInputMatrix(image_ds):$/;"	kind:function	line:42
get_image_2d	../dev/kmeans_clustering_cli.py	/^def get_image_2d(filepath):$/;"	kind:function	line:58
headerImage	../dev/read_multispectral.py	/^headerImage = image + ".hdr"$/;"	kind:variable	line:17
image	../dev/kmeans_clustering.py	/^image = rawImagePath + imageName + imageExtension$/;"	kind:variable	line:19
image	../dev/kmeans_clustering_cli.py	/^        image = sys.argv[1]$/;"	kind:variable	line:92
image	../dev/read_multispectral.py	/^image = rawImagePath + "sentinel2"$/;"	kind:variable	line:15
imageExtension	../dev/kmeans_clustering.py	/^imageExtension = ".bin"$/;"	kind:variable	line:17
imageName	../dev/kmeans_clustering.py	/^imageName = "sentinel2"$/;"	kind:variable	line:16
imageio	../dev/kmeans_clustering_cli.py	/^import imageio$/;"	kind:namespace	line:9
img	../dev/blending.py	/^img = cv2.imread(convertPath + colorImage, cv2.IMREAD_COLOR)$/;"	kind:variable	line:10
img	../dev/kmeans_clustering_cli.py	/^    img = np.zeros((img_ds.RasterYSize, img_ds.RasterXSize, img_ds.RasterCount),$/;"	kind:variable	line:112
img_ds	../dev/kmeans_clustering_cli.py	/^    img_ds = gdal.Open(image, gdal.GA_ReadOnly)$/;"	kind:variable	line:111
init	../dev/kmeans_clustering.py	/^init = 'k-means++'$/;"	kind:variable	line:24
k_means	../dev/kmeans_clustering_cli.py	/^    k_means = KMeans(n_clusters=K)$/;"	kind:variable	line:121
kmeans_clustering.py	../dev/kmeans_clustering.py	1;"	kind:file	line:1
kmeans_clustering_cli.py	../dev/kmeans_clustering_cli.py	1;"	kind:file	line:1
mapImage	../dev/blending.py	/^mapImage = "sentinel2_colorMap.png"$/;"	kind:variable	line:7
math	../dev/kmeans_clustering.py	/^import math$/;"	kind:namespace	line:8
math	../dev/kmeans_clustering_cli.py	/^import math$/;"	kind:namespace	line:14
matplotlib	../dev/kmeans_clustering.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:1
matplotlib	../dev/kmeans_clustering_cli.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:7
matplotlib	../dev/read_multispectral.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:9
matplotlib	../dev/read_multispectral_cli.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:24
n_init	../dev/kmeans_clustering.py	/^n_init = 10$/;"	kind:variable	line:25
n_jobs	../dev/kmeans_clustering.py	/^n_jobs = -1$/;"	kind:variable	line:27
new_shape	../dev/kmeans_clustering_cli.py	/^    new_shape = (img.shape[0] * img.shape[1], img.shape[2])$/;"	kind:variable	line:118
np	../dev/kmeans_clustering.py	/^import numpy as np$/;"	kind:namespace	line:5
np	../dev/kmeans_clustering_cli.py	/^import numpy as np$/;"	kind:namespace	line:11
np	../dev/read_multispectral.py	/^import numpy as np$/;"	kind:namespace	line:7
np	../dev/read_multispectral_cli.py	/^import numpy as np$/;"	kind:namespace	line:22
os	../dev/read_multispectral.py	/^import os.path as path$/;"	kind:namespace	line:8
os	../dev/read_multispectral_cli.py	/^import os.path as path$/;"	kind:namespace	line:23
output	../dev/blending.py	/^output = cv2.addWeighted(img, 1, cm, 0.5, 1)$/;"	kind:variable	line:12
path	../dev/read_multispectral.py	/^import os.path as path$/;"	kind:namespace	line:8
path	../dev/read_multispectral_cli.py	/^import os.path as path$/;"	kind:namespace	line:23
plt	../dev/kmeans_clustering.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:1
plt	../dev/kmeans_clustering_cli.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:7
plt	../dev/read_multispectral.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:9
plt	../dev/read_multispectral_cli.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:24
rawImagePath	../dev/kmeans_clustering.py	/^rawImagePath = "..\/images\/raw\/"$/;"	kind:variable	line:14
rawImagePath	../dev/read_multispectral.py	/^rawImagePath = "..\/images\/raw\/"$/;"	kind:variable	line:13
readRasterImage	../dev/kmeans_clustering.py	/^def readRasterImage(image):$/;"	kind:function	line:36
read_hdr	../dev/read_multispectral_cli.py	/^def read_hdr(hdr):$/;"	kind:function	line:27
read_multispectral.py	../dev/read_multispectral.py	1;"	kind:file	line:1
read_multispectral_cli.py	../dev/read_multispectral_cli.py	1;"	kind:file	line:1
rgb	../dev/read_multispectral_cli.py	/^rgb = np.zeros((samples, lines, 3))$/;"	kind:variable	line:73
run	../dev/kmeans_clustering.py	/^def run():$/;"	kind:function	line:104
run	../dev/read_multispectral.py	/^def run():$/;"	kind:function	line:83
runKMeans	../dev/kmeans_clustering.py	/^def runKMeans(K, X, image):$/;"	kind:function	line:56
run_kmeans	../dev/kmeans_clustering_cli.py	/^def run_kmeans(filepath, k):$/;"	kind:function	line:37
showImage	../dev/kmeans_clustering.py	/^def showImage(filepath):$/;"	kind:function	line:30
showImage	../dev/read_multispectral.py	/^def showImage(data):$/;"	kind:function	line:54
show_image	../dev/kmeans_clustering_cli.py	/^def show_image(filepath):$/;"	kind:function	line:26
sys	../dev/kmeans_clustering.py	/^import sys$/;"	kind:namespace	line:7
sys	../dev/kmeans_clustering_cli.py	/^import sys$/;"	kind:namespace	line:13
sys	../dev/read_multispectral.py	/^import sys$/;"	kind:namespace	line:6
sys	../dev/read_multispectral_cli.py	/^import sys$/;"	kind:namespace	line:21
t	../dev/read_multispectral.py	/^import time as t$/;"	kind:namespace	line:11
time	../dev/kmeans_clustering.py	/^import time$/;"	kind:namespace	line:9
uniqueTimeString	../dev/read_multispectral.py	/^def uniqueTimeString():$/;"	kind:function	line:66
writeImage	../dev/read_multispectral.py	/^def writeImage(data):$/;"	kind:function	line:73
